name: Upload Release Asset

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Add Windows Target for Rust
        run: rustup target add x86_64-pc-windows-gnu
      - name: Install the linker
        run: sudo apt-get install mingw-w64
      - name: Build
        run: cargo build --target x86_64-pc-windows-gnu --release
      - name: LS
        run: ls -al ./target/release/
      - name: FIND
        run: find . -name *redis-starter-rust*
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths my-artifact ./target/x86_64-pc-windows-gnu/release/redis-starter-rust.exe
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create v0.1 -t test './my-artifact.zip#My display label ${{ github.ref }}'

